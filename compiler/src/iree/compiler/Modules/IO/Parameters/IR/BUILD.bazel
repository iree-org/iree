# Copyright 2023 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:build_defs.oss.bzl", "iree_compiler_cc_library", "iree_gentbl_cc_library", "iree_tablegen_doc", "iree_td_library")
load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")

package(
    default_visibility = ["//visibility:public"],
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

exports_files(["IOParametersOps.td"])

iree_td_library(
    name = "td_files",
    srcs = enforce_glob(
        [
            "IOParametersBase.td",
            "IOParametersOps.td",
        ],
        include = ["*.td"],
    ),
    deps = [
        "//compiler/src/iree/compiler/Dialect/HAL/IR:td_files",
        "//compiler/src/iree/compiler/Dialect/Util/IR:td_files",
        "@llvm-project//mlir:FuncTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
    ],
)

iree_compiler_cc_library(
    name = "IR",
    srcs = [
        "IOParametersOps.cpp",
    ],
    hdrs = [
        "IOParametersOps.h",
        "IOParametersOps.h.inc",
    ],
    textual_hdrs = [
        "IOParametersOps.cpp.inc",
    ],
    deps = [
        ":IOParametersOpsGen",
        "//compiler/src/iree/compiler/Dialect/HAL/IR",
        "//compiler/src/iree/compiler/Dialect/Util/IR",
        "//compiler/src/iree/compiler/Dialect/VM/IR",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:ArithDialect",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:FunctionInterfaces",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:SideEffectInterfaces",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:TransformUtils",
        "@llvm-project//mlir:TranslateLib",
    ],
)

iree_compiler_cc_library(
    name = "IOParametersDialect",
    srcs = ["IOParametersDialect.cpp"],
    hdrs = ["IOParametersDialect.h"],
    deps = [
        ":IR",
        "//compiler/src/iree/compiler/Dialect/HAL/Conversion",
        "//compiler/src/iree/compiler/Dialect/VM/Conversion",
        "//compiler/src/iree/compiler/Modules/IO/Parameters:io_parameters_imports",
        "//compiler/src/iree/compiler/Modules/IO/Parameters/Conversion/ParamsToVM",
        "//compiler/src/iree/compiler/Modules/IO/Parameters/Conversion/StreamToParams",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:FunctionInterfaces",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:InliningUtils",
        "@llvm-project//mlir:Parser",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:TransformUtils",
    ],
)

iree_gentbl_cc_library(
    name = "IOParametersOpsGen",
    tbl_outs = [
        (
            ["--gen-op-decls"],
            "IOParametersOps.h.inc",
        ),
        (
            ["--gen-op-defs"],
            "IOParametersOps.cpp.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "IOParametersOps.td",
    deps = [":td_files"],
)

iree_tablegen_doc(
    name = "IOParametersDialectDocGen",
    category = "Dialects",
    tbl_outs = [
        (
            [
                "--dialect=io_parameters",
                "--gen-dialect-doc",
            ],
            "IOParametersDialect.md",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "IOParametersOps.td",
    deps = [":td_files"],
)
