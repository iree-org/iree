// Copyright 2024 The IREE Authors
//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

#ifndef IREE_CODEGEN_DIALECT_GPU_IREEGPU_DIALECT
#define IREE_CODEGEN_DIALECT_GPU_IREEGPU_DIALECT

include "mlir/IR/OpBase.td"
include "mlir/IR/AttrTypeBase.td"
include "mlir/IR/EnumAttr.td"

//===----------------------------------------------------------------------===//
// IREE GPU Dialect
//===----------------------------------------------------------------------===//

def IREEGPU_Dialect : Dialect {
  let name = "iree_gpu";
  let cppNamespace = "::mlir::iree_compiler::IREE::GPU";

  let summary = [{
    A dialect for common functionality used by GPU focused IREE code generation.
  }];
  let description = [{
    This dialect provides operations and attributes to aid in code generation
    for GPU targets. The functionality in this dialect can be hardware specific,
    but is intended to be independent of the lowering target. Late lowerings to
    SPIR-V/LLVM are handled separately.
  }];
  let useDefaultAttributePrinterParser = 1;

  let discardableAttrs = (ins
    "::mlir::UnitAttr":$use_rocdl_buffer_instructions
  );
  let extraClassDeclaration = [{
    void registerAttributes();
  }];
}

//===----------------------------------------------------------------------===//
// Type definitions
//===----------------------------------------------------------------------===//

class RankedTensorOrVectorOf<list<Type> allowedTypes> :
  ShapedContainerType<allowedTypes,
      Or<[IsVectorOfNonZeroRankTypePred, And<[IsTensorTypePred, HasRankPred]>]>,
  "ranked tensor or vector", "::mlir::ShapedType">;

def AnyRankedTensorOrVector : RankedTensorOrVectorOf<[AnyType]>;

#endif // IREE_CODEGEN_DIALECT_GPU_IREEGPU_DIALECT
