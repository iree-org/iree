# Copyright 2019 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")
load("//build_tools/bazel:iree_lit_test.bzl", "iree_lit_test_suite")

package(
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

iree_lit_test_suite(
    name = "lit",
    srcs = enforce_glob(
        [
            "annotate_op_ordinals.mlir",
            "combine_initializers.mlir",
            "drop_compiler_hints.mlir",
            "fold_globals.mlir",
            "fuse_globals.mlir",
            "hoist_into_globals.mlir",
            "hoist_into_globals_linalg.mlir",
            "import_resources.mlir",
            "integer_divisibility.mlir",
            "ipo.mlir",
            "lift_cfg_to_scf.mlir",
            "link_modules.mlir",
            "link_modules_auto.mlir",
            "link_modules_error.mlir",
            "optimize_int_arithmetic.mlir",
            "optimize_int_arithmetic_narrowing.mlir",
            "patterns.mlir",
            "patterns_unreachable.mlir",
            "propagate_subranges.mlir",
            "simplify_global_accesses.mlir",
            "strip_and_splat_constants.mlir",
            "strip_debug_ops.mlir",
            "test_float_range_analysis.mlir",
            "test_float_range_analysis_linalg.mlir",
            "verify_initialization_order.mlir",
            "verify_structured_control_flow.mlir",
        ],
        include = ["*.mlir"],
        exclude = [
            "link_module_a.mlir",
            "link_module_b.mlir",
            "link_modules_bundle.mlir",
        ],
    ),
    cfg = "//compiler:lit.cfg.py",
    data = [
        "link_module_a.mlir",
        "link_module_b.mlir",
        "link_modules_bundle.mlir",
    ],
    tools = [
        "//tools:iree-opt",
        "@llvm-project//llvm:FileCheck",
    ],
)
